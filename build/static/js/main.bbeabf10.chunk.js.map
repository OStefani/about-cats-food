{"version":3,"sources":["Components/DisplayName.js","Components/DisplayTitle.js","Components/DisplayFeatures.js","Components/DisplayBadge.js","Components/DisplaySlogan.js","Components/Box.js","shared/goods.js","redux/actions.js","Components/App.js","redux/reducers.js","Components/Main.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["DisplayName","props","react_default","a","createElement","className","name","DisplayTitle","Components_DisplayName","DisplayFeatures","featuresList","features","Object","keys","map","index","key","DisplayBadge","selected","size","DisplaySlogan","goods","amount","slogan_disabled","slogan_selected","slogan_default","onClick","selectHandler","id","Box","Components_DisplayTitle","Components_DisplayFeatures","Components_DisplayBadge","Components_DisplaySlogan","GOODS","weight","portion","SELECT","App","_this","this","Components_Box","selectBox","Component","connect","state","console","log","dispatch","type","initialState","selectReducer","arguments","length","undefined","action","concat","toConsumableArray","slice","store","createStore","Main","es","Components_App","Boolean","window","location","hostname","match","ReactDOM","render","Components_Main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bbeabf10.chunk.js","sourcesContent":["import React from 'react';\n\nfunction DisplayName(props) {\n    \n    return <span className='title-bottom'>{props.name}</span>\n}\n\nexport default DisplayName;","import React from 'react'\nimport DisplayName from './DisplayName';\n\nfunction DisplayTitle(props) {\n    return (\n        <h2>\n            <span className='title-top'>Сказочное заморское яство</span>\n            <span className='title-middle'>Нямушка</span>\n            <DisplayName name={props.name} />\n\n        </h2>\n    )\n}\nexport default DisplayTitle;","import React from 'react';\n\nfunction DisplayFeatures(props) {\n    let featuresList = props.features;\n    return (\n        <div className=\"features\">\n            {Object.keys(featuresList).map(index => <div key={featuresList[index]}>{featuresList[index]}</div>)}\n        </div>\n    )\n}\n\nexport default DisplayFeatures;","import React from 'react';\n\nfunction DisplayBadge(props) {\n    return (\n        <div className={props.selected ? 'badge badge-red' : 'badge badge-blue'}>\n            <div className='badge-inner'>\n                <span className='badge-size'>{props.size}</span>\n                кг\n            </div>\n            \n        </div>\n    )\n}\nexport default DisplayBadge;","import React from 'react';\n\nfunction DisplaySlogan(props) {\n    \n    return (\n        <div className=\"slogan\">\n        {\n            props.goods.amount < 1 ? props.goods.slogan_disabled :\n            props.selected ? props.goods.slogan_selected : \n            props.goods.slogan_default\n        }\n        <span className='slogan-span' onClick={()=> props.selectHandler(props.goods.id)}>\n            { !props.selected && props.goods.amount > 0 ? 'купи' : null }\n        </span>        \n        </div>\n    )\n}\n\nexport default DisplaySlogan;","import React from 'react';\nimport DisplayTitle from './DisplayTitle';\nimport DisplayFeatures from './DisplayFeatures';\nimport DisplayBadge from './DisplayBadge';\nimport DisplaySlogan from './DisplaySlogan';\n\nfunction Box(props) {\n    return (\n        <div className={props.goods.amount<1 ? 'disabled': 'box-wrapper'}>\n            <div onClick={()=> props.selectHandler(props.goods.id)} className={props.goods.amount < 1 ? 'box-inner-disabled box-inner' : props.selected ? 'box-inner-red box-inner' : 'box-inner'}>\n                <div className=\"box-inner-white\">\n                <DisplayTitle name={props.goods.name}  />\n                <DisplayFeatures features = {props.goods.features} />\n                <DisplayBadge size={props.goods.size} selected ={props.selected}/>\n                </div>                \n            </div> \n            <DisplaySlogan goods={props.goods} selected ={props.selected} selectHandler={props.selectHandler} />\n        </div>\n    )\n}\nexport default Box;","export const GOODS = [\n    {\n        id: 0,\n        name: \"с фуа-гра\",\n        features: [\"10 порций\",\"мышь в подарок\"],\n        weight: \"0.5\",\n        slogan_default: \"Чего сидишь? Порадуй котэ, \",\n        slogan_selected: \"Печень утки разварная с артишоками\",\n        slogan_disabled: \"Печалька, с фуа-гра закончился\",\n        amount: 1,\n        size: 0.5\n    },\n    {\n        id: 1,\n        name: \"с рыбой\",\n        features: [\"40 порций\",\"2 мыши в подарок\"],\n        weight: \"2\",\n        slogan_default: \"Чего сидишь? Порадуй котэ, \",\n        slogan_selected: \"Головы щучьи  чесноком да свежайщая семгушка\",\n        slogan_disabled: \"Печалька, с рыбой закончился\",\n        amount: 1,\n        size: 2\n    },\n    {\n        id: 2,\n        name: \"с курой\",\n        portion: \"100 порций\",\n        features: [\"100 порций\",\"5 мышей в подарок\", \"заказчик доволен\"],\n        weight: \"5\",\n        slogan_default: \"Чего сидишь? Порадуй котэ, \",\n        slogan_selected: \"Филе из цыплят с трюфелями в бульоне\",\n        slogan_disabled: \"Печалька, с курой закончился\",\n        amount: 0,\n        size: 5\n    }\n]","export const SELECT = 'SELECT';\n//const AVAILABLE = 'AVAILABLE';\n\n// action creators\n\nexport function selectBox(id) {\n    console.log('values: ', id)\n    return {type: SELECT, id: id}\n}\n\n//export function availableBox(bool) {\n //   return {type: AVAILABLE, availableState: bool}\n//}","import React, { Component } from 'react';\nimport '../App.css';\nimport Box from \"./Box\";\nimport {GOODS} from '../shared/goods';\nimport {selectBox} from '../redux/actions';\nimport { connect } from 'react-redux';\n\n\nconst mapStateToProps = (state) => {\n  console.log('mapStateToProps state: ', state);\n  return {selected: state}\n}\nfunction mapDispatchToProps(dispatch) {\n  return {selectBox: function(id) {\n    console.log('mapDispatchToProps id: ', id);\n    dispatch(selectBox(id))\n  }}\n}\nclass App extends Component {\n \n  render() {\n    \n    return (     \n      <div className=\"app\">        \n        <h1 className='header'>Ты сегодня покормил кота?</h1>\n        <div className='wrapper'>\n            {       \n              Object.keys(GOODS).map(index => {              \n                return <Box key={GOODS[index].id} goods={GOODS[index]} selected=            {this.props.selected[index]} selectHandler={this.props.selectBox} ></Box>\n            })\n            }\n        </div>      \n      </div>     \n    );\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {SELECT} from './actions'\nexport const initialState = [false, false, false];\n\nexport const selectReducer = function(state=initialState, action) {\n    console.log('state in reducer: ',  state);\n    console.log('action in reducer: ', action);\n    switch (action.type) {\n        case SELECT:       \n            return [...state.slice(0, action.id), !state[action.id], ...state.slice(action.id+1)];\n        default: \n            return state;\n    }\n}\n\n/*export const availableReducer = function(state=[false, false, false], action) {\n    switch (action.type){\n        case AVAILABLE:\n            return \n        default:\n            throw new Error('Unexpected action')\n    }\n        \n}*/","import React, { Component } from 'react';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport {ConfigureStore} from '../redux/configureStore';\n\nconst store = ConfigureStore();\nconsole.log('store: ', store);\n\nclass Main extends Component {\n  \n    render() {\n      return (\n        // To make the store available to all the component\n        <Provider store={ store }>      \n            <App />    \n        </Provider>\n      );\n    }\n  }\n  \n  export default Main;\n  ","import {createStore} from 'redux';\nimport {selectReducer} from './reducers';\n\nexport  const ConfigureStore = ()=> {\n     console.log('selectReducer: ', selectReducer);\n     const store = createStore(selectReducer);\n     return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Components/Main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}